	    SUMMARY OF THE HDF5 CONFIGURATION
	    =================================

General Information:
-------------------
                   HDF5 Version: 1.12.1
                  Configured on: Mon Nov 22 19:31:11 UTC 2021
                  Configured by: runner@Mac-1637608835277.local
                    Host system: arm64-apple-darwin20.0.0
              Uname information: Darwin Mac-1637608835277.local 19.6.0 Darwin Kernel Version 19.6.0: Tue Oct 12 18:34:05 PDT 2021; root:xnu-6153.141.43~1/RELEASE_X86_64 x86_64
                       Byte sex: little-endian
             Installation point: /Users/jmccarty/GitHub/epwmorph/env

Compiling Options:
------------------
                     Build Mode: production
              Debugging Symbols: no
                        Asserts: no
                      Profiling: no
             Optimization Level: high

Linking Options:
----------------
                      Libraries: static, shared
  Statically Linked Executables: 
                        LDFLAGS: -Wl,-pie -Wl,-headerpad_max_install_names -Wl,-dead_strip_dylibs -Wl,-rpath,/Users/jmccarty/GitHub/epwmorph/env/lib -L/Users/jmccarty/GitHub/epwmorph/env/lib
                     H5_LDFLAGS:  -Wl,-commons,use_dylibs
                     AM_LDFLAGS:  -L/Users/jmccarty/GitHub/epwmorph/env/lib
                Extra libraries: -lcrypto -lcurl -lpthread -lz -ldl -lm 
                       Archiver: arm64-apple-darwin20.0.0-ar
                       AR_FLAGS: cr
                         Ranlib: arm64-apple-darwin20.0.0-ranlib

Languages:
----------
                              C: yes
                     C Compiler: /Users/runner/miniforge3/conda-bld/hdf5_split_1637609097415/_build_env/bin/arm64-apple-darwin20.0.0-clang
                       CPPFLAGS: -D_FORTIFY_SOURCE=2 -isystem /Users/jmccarty/GitHub/epwmorph/env/include -mmacosx-version-min=11.0
                    H5_CPPFLAGS:   -DNDEBUG -UH5_DEBUG_API
                    AM_CPPFLAGS:  -I/Users/jmccarty/GitHub/epwmorph/env/include
                        C Flags: -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -isystem /Users/jmccarty/GitHub/epwmorph/env/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/hdf5_split_1637609097415/work=/usr/local/src/conda/hdf5_split-1.12.1 -fdebug-prefix-map=/Users/jmccarty/GitHub/epwmorph/env=/usr/local/src/conda-prefix
                     H5 C Flags:  -std=c99  -Wall -Warray-bounds -Wcast-qual -Wconversion -Wdouble-promotion -Wextra -Wformat=2 -Wframe-larger-than=16384 -Wimplicit-fallthrough -Wno-c++-compat -Wno-format-nonliteral -Wnull-dereference -Wunused-const-variable -Wwrite-strings -Wpedantic -Wvolatile-register-var    -Wno-missing-noreturn  -Wbad-function-cast -Wimplicit-function-declaration -Wincompatible-pointer-types -Wmissing-declarations -Wpacked -Wshadow -Wswitch -Wno-error=incompatible-pointer-types-discards-qualifiers -Wunused-function -Wunused-variable -Wunused-parameter -Wcast-align -Wformat -O3
                     AM C Flags: 
               Shared C Library: yes
               Static C Library: yes


                        Fortran: yes
               Fortran Compiler: /Users/runner/miniforge3/conda-bld/hdf5_split_1637609097415/_build_env/bin/arm64-apple-darwin20.0.0-gfortran ( GNU Fortran (GCC) 11.0.1 20210403 )
                  Fortran Flags: 
               H5 Fortran Flags:  -std=f2008  -Waliasing -Wall -Wcharacter-truncation -Wextra -Wimplicit-interface -Wsurprising -Wunderflow -pedantic -Warray-temporaries -Wintrinsics-std -Wimplicit-procedure -Wreal-q-constant -Wfunction-elimination -Wrealloc-lhs -Wrealloc-lhs-all -Wno-c-binding-type -Wuse-without-only -Winteger-division -Wfrontend-loop-interchange  -fdiagnostics-urls=never -fno-diagnostics-color -s -O3
               AM Fortran Flags: 
         Shared Fortran Library: yes
         Static Fortran Library: yes

                            C++: yes
                   C++ Compiler: /Users/runner/miniforge3/conda-bld/hdf5_split_1637609097415/_build_env/bin/arm64-apple-darwin20.0.0-clang++
                      C++ Flags: -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -isystem /Users/jmccarty/GitHub/epwmorph/env/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/hdf5_split_1637609097415/work=/usr/local/src/conda/hdf5_split-1.12.1 -fdebug-prefix-map=/Users/jmccarty/GitHub/epwmorph/env=/usr/local/src/conda-prefix
                   H5 C++ Flags:      
                   AM C++ Flags:  -DOLD_HEADER_FILENAME -DHDF_NO_NAMESPACE -DNO_STATIC_CAST
             Shared C++ Library: yes
             Static C++ Library: yes

                           Java: no


Features:
---------
                   Parallel HDF5: no
Parallel Filtered Dataset Writes: no
              Large Parallel I/O: no
              High-level library: yes
                Build HDF5 Tests: no
                Build HDF5 Tools: yes
                    Threadsafety: yes (recursive RW locks: no)
             Default API mapping: v112
  With deprecated public symbols: yes
          I/O filters (external): deflate(zlib)
                             MPE: no
                   Map (H5M) API: no
                      Direct VFD: no
                      Mirror VFD: no
              (Read-Only) S3 VFD: yes
            (Read-Only) HDFS VFD: no
                         dmalloc: no
  Packages w/ extra debug output: none
                     API tracing: no
            Using memory checker: yes
 Memory allocation sanity checks: no
          Function stack tracing: no
                Use file locking: best-effort
       Strict file format checks: no
    Optimization instrumentation: no
